{"version":3,"sources":["webpack:///./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack:///./node_modules/core-js/internals/ie8-dom-define.js","webpack:///./node_modules/core-js/internals/a-function.js","webpack:///./node_modules/core-js/internals/require-object-coercible.js","webpack:///./node_modules/core-js/internals/to-absolute-index.js","webpack:///./node_modules/core-js/internals/export.js","webpack:///./node_modules/core-js/internals/object-get-own-property-names.js","webpack:///./node_modules/core-js/internals/path.js","webpack:///./node_modules/core-js/internals/indexed-object.js","webpack:///./node_modules/core-js/internals/species-constructor.js","webpack:///./node_modules/core-js/internals/native-symbol.js","webpack:///./node_modules/core-js/internals/array-includes.js","webpack:///./node_modules/core-js/internals/to-length.js","webpack:///./node_modules/core-js/internals/has.js","webpack:///./node_modules/core-js/internals/shared.js","webpack:///./node_modules/core-js/internals/own-keys.js","webpack:///./node_modules/core-js/internals/create-property-descriptor.js","webpack:///./node_modules/core-js/internals/internal-state.js","webpack:///./node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack:///./node_modules/core-js/internals/redefine.js","webpack:///./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack:///./node_modules/core-js/internals/enum-bug-keys.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/core-js/internals/native-weak-map.js","webpack:///./node_modules/core-js/internals/an-object.js","webpack:///./node_modules/core-js/internals/descriptors.js","webpack:///./node_modules/core-js/internals/is-object.js","webpack:///./node_modules/core-js/internals/inspect-source.js","webpack:///./node_modules/core-js/internals/uid.js","webpack:///./node_modules/core-js/internals/create-non-enumerable-property.js","webpack:///./node_modules/core-js/internals/is-forced.js","webpack:///./node_modules/core-js/internals/object-define-property.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/core-js/internals/to-integer.js","webpack:///./node_modules/core-js/modules/es.promise.finally.js","webpack:///./node_modules/core-js/internals/well-known-symbol.js","webpack:///./node_modules/core-js/internals/to-primitive.js","webpack:///./node_modules/core-js/internals/is-pure.js","webpack:///./node_modules/core-js/internals/classof-raw.js","webpack:///./node_modules/core-js/internals/shared-store.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/internals/object-keys-internal.js","webpack:///./node_modules/core-js/internals/document-create-element.js","webpack:///./node_modules/core-js/internals/promise-resolve.js","webpack:///./node_modules/core-js/internals/set-global.js","webpack:///./node_modules/core-js/internals/hidden-keys.js","webpack:///./node_modules/core-js/internals/fails.js","webpack:///./node_modules/core-js/internals/get-built-in.js","webpack:///./node_modules/core-js/internals/object-property-is-enumerable.js","webpack:///./node_modules/core-js/internals/global.js","webpack:///./node_modules/core-js/internals/copy-constructor-properties.js","webpack:///./node_modules/core-js/internals/new-promise-capability.js","webpack:///./node_modules/core-js/internals/shared-key.js","webpack:///./node_modules/core-js/internals/to-indexed-object.js","webpack:///./node_modules/core-js/internals/use-symbol-as-uid.js","webpack:///./node_modules/core-js/internals/native-promise-constructor.js"],"names":["DESCRIPTORS","propertyIsEnumerableModule","createPropertyDescriptor","toIndexedObject","toPrimitive","has","IE8_DOM_DEFINE","nativeGetOwnPropertyDescriptor","Object","getOwnPropertyDescriptor","exports","f","O","P","error","call","fails","createElement","module","defineProperty","get","a","it","TypeError","String","undefined","toInteger","max","Math","min","index","length","integer","global","createNonEnumerableProperty","redefine","setGlobal","copyConstructorProperties","isForced","options","source","FORCED","target","key","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","prototype","noTargetGet","value","forced","sham","internalObjectKeys","enumBugKeys","hiddenKeys","concat","getOwnPropertyNames","classof","split","propertyIsEnumerable","anObject","aFunction","wellKnownSymbol","SPECIES","defaultConstructor","S","C","constructor","getOwnPropertySymbols","Symbol","toLength","toAbsoluteIndex","createMethod","IS_INCLUDES","$this","el","fromIndex","includes","indexOf","argument","hasOwnProperty","IS_PURE","store","push","version","mode","copyright","getBuiltIn","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","keys","bitmap","enumerable","configurable","writable","set","NATIVE_WEAK_MAP","isObject","objectHas","sharedKey","WeakMap","enforce","getterFor","TYPE","state","type","wmget","wmhas","wmset","metadata","STATE","hasSymbol","toStringTag","PolySymbol","name","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","isBrowser","window","isESModule","obj","__esModule","assign","applyToParams","fn","params","newParams","Array","isArray","map","noop","TRAILING_SLASH_RE","removeTrailingSlash","path","replace","parseURL","parseQuery","location","currentLocation","query","searchString","hash","searchPos","hashPos","slice","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","pathname","base","toLowerCase","isSameRouteLocation","b","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","every","i","to","from","startsWith","fromSegments","toSegments","toPosition","segment","position","join","NavigationType","NavigationDirection","normalizeBase","baseEl","document","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","style","scrollTo","getScrollKey","delta","history","scrollPositions","Map","saveScrollPosition","scrollPosition","getSavedScrollPosition","scroll","delete","createBaseLocation","protocol","host","createCurrentLocation","search","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","forEach","listener","pop","direction","forward","back","unknown","pauseListeners","listen","callback","teardown","splice","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","url","err","console","data","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","Error","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","message","subPattern","parse","match","stringify","avoidDuplicatedSlash","endsWith","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","buffer","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","test","createRouteRecordMatcher","record","parent","parser","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","mergeOptions","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","resolve","paramsFromLocation","filter","k","find","m","parentMatcher","unshift","mergeMetaFields","redirect","beforeEnter","props","normalizeRecordProps","instances","leaveGuards","updateGuards","enterCallbacks","default","component","propsObject","reduce","defaults","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","values","v","normalizeQuery","normalizedQuery","useCallbacks","handlers","add","handler","reset","list","guardToPromiseFn","guard","enterCallbackArray","Promise","reject","next","valid","guardReturn","guardCall","then","catch","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","e","guardEvent","href","RouterLinkImpl","required","activeClass","exactActiveClass","custom","Boolean","ariaCurrentValue","slots","attrs","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","outer","inner","innerValue","outerValue","some","propClass","globalClass","defaultClass","RouterViewImpl","injectedRoute","depth","matchedRouteRef","viewRef","instance","oldInstance","oldName","flush","matchedRoute","ViewComponent","currentName","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","ref","RouterView","createRouter","parseQuery$1","stringifyQuery$1","scrollBehavior","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","targetLocation","force","lastMatched","newTargetLocation","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","Set","beforeEach","beforeResolve","afterEach","onError","app","this","config","globalProperties","$router","reactiveRoute","provide","unmountApp","unmount","size","arguments","promise","len","recordFrom","recordTo","inspectSource","InternalStateModule","getInternalState","enforceInternalState","TEMPLATE","unsafe","simple","Function","targetMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","scheduler","enableTracking","resetTracking","id","allowRecurse","deps","shouldTrack","trackStack","pauseTracking","last","track","depsMap","dep","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","run","builtInSymbols","createGetter","shallowGet","readonlyGet","shallowReadonlyGet","arrayInstrumentations","isReadonly","shallow","receiver","readonlyMap","reactiveMap","targetIsArray","Reflect","res","isRef","shouldUnwrap","readonly","reactive","method","args","arr","toRaw","l","apply","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","iteratorMethods","createInstrumentationGetter","instrumentations","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","convert","val","r","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ComputedRefImpl","getter","_setter","_dirty","getterOrOptions","setter","callWithErrorHandling","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","nextTick","p","queueJob","job","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","getId","Infinity","event","rawArgs","isModelListener","modelArg","modifiersKey","number","trim","handlerName","onceHandler","emitted","normalizeEmitsOptions","asMixin","deopt","__emits","emits","normalized","hasExtends","extendEmits","mixins","extends","isEmitListener","currentRenderingInstance","setCurrentRenderingInstance","renderComponentRoot","withProxy","propsOptions","emit","render","renderCache","setupState","ctx","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","inheritAttrs","filterModelListeners","cloneVNode","dirs","transition","createVNode","Comment","filterSingleRoot","filtered","child","isVNode","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","normalizeSuspenseChildren","content","fallback","normalizeSuspenseSlot","s","singleChild","queueEffectWithSuspense","suspense","pendingBranch","isRenderingCompiledSlot","setCompiledSlotRendering","n","withCtx","renderFnWithContext","openBlock","owner","closeBlock","_c","currentScopeId","scopeIdStack","pushScopeId","popScopeId","withScopeId","initProps","rawProps","isStateful","isSSR","InternalObjectKey","setFullProps","updateProps","rawPrevProps","rawCurrentProps","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","camelKey","opt","hasDefault","defaultValue","setCurrentInstance","normalizePropsOptions","__props","extendProps","normalizedKey","validatePropName","prop","booleanIndex","getTypeIndex","stringIndex","getType","ctor","toString","isSameType","expectedTypes","injectHook","hook","currentInstance","prepend","hooks","wrappedHook","__weh","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onMounted","onBeforeUpdate","onUpdated","onBeforeUnmount","onUnmounted","onRenderTriggered","onRenderTracked","onErrorCaptured","INITIAL_WATCHER_VALUE","watch","doWatch","immediate","deep","onTrack","onTrigger","cleanup","forceTrigger","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","useTransitionState","isLeaving","isUnmounting","leavingVNodes","TransitionHookValidator","BaseTransitionImpl","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","create","callHook","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","__isKeepAlive","getName","displayName","matches","onActivated","registerKeepAliveHook","onDeactivated","__wdc","isDeactivated","injectToKeepAliveRoot","keepAliveRoot","injected","resetShapeFlag","getInnerChild","isInternalKey","normalizeSlotValue","normalizeSlot","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","invokeDirectiveHook","bindings","oldBindings","binding","dir","createAppContext","isNativeTag","performance","optionMergeStrategies","isCustomElement","warnHandler","directives","provides","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","plugin","install","mixin","directive","rootContainer","isHydrate","__vue_app__","initFeatureFlags","prodEffectOptions","setRef","rawRef","oldRawRef","parentComponent","parentSuspense","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","isSVG","getNextHostNode","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","process","internals","mountElement","patchElement","vnodeHook","scopeId","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","needCallTransitionHooks","onVnodeMounted","enter","treeOwnerId","__scopeId","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","prev","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","isTeleportDisabled","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","o","createApp","ch1","ch2","c","arrI","isTeleport","__isTeleport","disabled","COMPONENTS","resolveComponent","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","registry","blockStack","currentBlock","disableTracking","createBlock","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","klass","targetAnchor","staticCount","extraProps","mergeRef","mergedProps","mergeProps","createTextVNode","flag","createStaticVNode","numberOfNodes","slot","slotFlag","toMerge","existing","incoming","parentProvides","inject","treatDefaultAsFactory","isInBeforeCreate","applyOptions","deferredData","deferredWatch","deferredProvide","extendsOptions","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","globalMixins","callSyncHook","applyMixins","methodHandler","dataFn","resolveData","createWatcher","callHookFromMixins","callHookFromExtends","selfHook","baseHook","chainedMixins","createPathGetter","resolveMergedOptions","__merged","strats","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","setupContext","bc","da","rtg","rtc","compile","setupResult","setupStatefulComponent","setup","createSetupContext","resolvedResult","handleSetupResult","finishComponentSetup","template","delimiters","_rc","defineComponent","h","propsOrChildren","svgNS","doc","tempContainer","tempSVGContainer","nodeOps","insertBefore","removeChild","tag","createElementNS","createTextNode","node","nodeValue","textContent","selector","setAttribute","temp","innerHTML","first","firstChild","patchClass","transitionClasses","_vtc","className","patchStyle","cssText","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","cached","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_getNow","Date","now","createEvent","timeStamp","cachedNow","getNow","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","setTimeout","whenTransitionEnds","NumberOf","cls","classList","requestAnimationFrame","expectedType","timeout","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","functionToString","postfix","random","definePropertyModule","object","replacement","feature","detection","normalize","POLYFILL","NATIVE","string","nativeDefineProperty","Attributes","makeMap","str","expectsLowerCase","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","item","isString","parseStringStyle","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","isDate","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","bHasKey","looseIndexOf","toDisplayString","JSON","replacer","_key","isMap","entries","isSet","isPlainObject","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","cache","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","charAt","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","toNumber","parseFloat","isNaN","_globalThis","getGlobalThis","globalThis","self","ceil","floor","NativePromise","speciesConstructor","promiseResolve","NON_GENERIC","real","onFinally","x","shared","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","WellKnownSymbolsStore","createWellKnownSymbol","withoutSetter","input","PREFERRED_STRING","valueOf","SHARED","g","names","EXISTS","newPromiseCapability","promiseCapability","exec","variable","namespace","nativePropertyIsEnumerable","NASHORN_BUG","1","V","check","getOwnPropertyDescriptorModule","PromiseCapability","$$resolve","$$reject","IndexedObject","requireObjectCoercible"],"mappings":"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","file":"js/chunk-vendors.af2bfe55.js","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPrimitive = require('../internals/to-primitive');\nvar has = require('../internals/has');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\nvar nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return nativeGetOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') {\n    throw TypeError(String(it) + ' is not a function');\n  } return it;\n};\n","// `RequireObjectCoercible` abstract operation\n// https://tc39.github.io/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var toInteger = require('../internals/to-integer');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toInteger(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar redefine = require('../internals/redefine');\nvar setGlobal = require('../internals/set-global');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target      - name of the target object\n  options.global      - target is the global object\n  options.stat        - export as static methods of target\n  options.proto       - export as prototype methods of target\n  options.real        - real prototype method for the `pure` version\n  options.forced      - export even if the native feature is available\n  options.bind        - bind methods to the target, required for the `pure` version\n  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe      - use the simple assignment of property instead of delete + defineProperty\n  options.sham        - add a flag to not completely full polyfills\n  options.enumerable  - export as enumerable property\n  options.noTargetGet - prevent calling a getter on target\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || setGlobal(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.noTargetGet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty === typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    // extend global\n    redefine(target, key, sourceProperty, options);\n  }\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.github.io/ecma262/#sec-object.getownpropertynames\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","var global = require('../internals/global');\n\nmodule.exports = global;\n","var fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar split = ''.split;\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins\n  return !Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split.call(it, '') : Object(it);\n} : Object;\n","var anObject = require('../internals/an-object');\nvar aFunction = require('../internals/a-function');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.github.io/ecma262/#sec-speciesconstructor\nmodule.exports = function (O, defaultConstructor) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  // Chrome 38 Symbol has incorrect toString conversion\n  // eslint-disable-next-line no-undef\n  return !String(Symbol());\n});\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toLength = require('../internals/to-length');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var toInteger = require('../internals/to-integer');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.github.io/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var hasOwnProperty = {}.hasOwnProperty;\n\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.6.5',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n});\n","var getBuiltIn = require('../internals/get-built-in');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar objectHas = require('../internals/has');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP) {\n  var store = new WeakMap();\n  var wmget = store.get;\n  var wmhas = store.has;\n  var wmset = store.set;\n  set = function (it, metadata) {\n    wmset.call(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget.call(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas.call(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return objectHas(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return objectHas(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","/*!\n  * vue-router v4.0.0-rc.1\n  * (c) 2020 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n// rvd = Router View Depth\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n// r = router\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n// rt = route location\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || pathname.toLowerCase().indexOf(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash based url\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        let pathFromHash = hash.slice(1);\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        // when the base has a `#`, only use that for the URL\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? base.slice(hashIndex) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname` or\r\n * `/` if at root. If there is a `base` tag in the `head`, its value will be\r\n * **ignored**.\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (base.indexOf('#') < 0)\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern = optional ? `(?:/${subPattern})` : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // remove the last slash as we could be at the end\r\n                            if (path.endsWith('/'))\r\n                                path = path.slice(0, -1);\r\n                            // do not append a slash on the next iteration\r\n                            else\r\n                                avoidDuplicatedSlash = true;\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                    customRe = '';\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: [],\r\n        updateGuards: [],\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\n// const PLUS_RE = /\\+/g // %3F\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return commonEncode(text)\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        const searchParam = searchParams[i];\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        if (search.length)\r\n            search += '&';\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined)\r\n                search += key;\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        for (let i = 0; i < values.length; i++) {\r\n            // only append & with i > 0\r\n            search += (i ? '&' : '') + key;\r\n            if (values[i] != null)\r\n                search += ('=' + values[i]);\r\n        }\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(list, guard) {\r\n    const removeFromList = () => {\r\n        const index = list.indexOf(guard);\r\n        if (index > -1)\r\n            list.splice(index, 1);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        const index = list.indexOf(guard);\r\n        if (index < 0)\r\n            list.push(guard);\r\n    });\r\n    list.push(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('onBeforeRouteLeave must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('onBeforeRouteLeave must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord.leaveGuards, leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('onBeforeRouteUpdate must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('onBeforeRouteUpdate must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord.updateGuards, updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-ignore: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-ignore: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                else {\r\n                    // display the error if any\r\n                    componentPromise = componentPromise.catch((process.env.NODE_ENV !== 'production') ? err => err && warn(err) : console.error);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // @ts-ignore: the options types are not propagated to Component\r\n                    const guard = resolvedComponent[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e))\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to));\r\n        return Promise.resolve();\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    setup(props, { slots, attrs }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', assign({\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    onClick: link.navigate,\r\n                    href: link.href,\r\n                }, attrs, {\r\n                    class: elClass.value,\r\n                }), children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-ignore getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-ignore getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routeLocationKey);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => (props.route || injectedRoute).matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards\r\n                if (from && instance === oldInstance) {\r\n                    to.leaveGuards = from.leaveGuards;\r\n                    to.updateGuards = from.updateGuards;\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = props.route || injectedRoute;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return slots.default\r\n                    ? slots.default({ Component: ViewComponent, route })\r\n                    : null;\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            slots.default\r\n                ? slots.default({ Component: component, route })\r\n                : component);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let { scrollBehavior } = options;\r\n    let routerHistory = options.history;\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string' ? { path: to } : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const lastMatched = targetLocation.matched[targetLocation.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            // transform it into an object to pass the original RouteLocaleOptions\r\n            let newTargetLocation = locationAsObject(typeof redirect === 'function' ? redirect(targetLocation) : redirect);\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${targetLocation.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                return Promise.reject(new Error('Invalid redirect'));\r\n            }\r\n            return pushWithRedirect(assign({\r\n                query: targetLocation.query,\r\n                hash: targetLocation.hash,\r\n                params: targetLocation.params,\r\n            }, newTargetLocation, {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        }\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a pus\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => {\r\n            if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ |\r\n                8 /* NAVIGATION_CANCELLED */ |\r\n                2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                return error;\r\n            }\r\n            // unknown error, rejects\r\n            return triggerError(error);\r\n        })\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-ignore\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-ignore\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords,] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            for (const guard of record.leaveGuards) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                for (const guard of record.updateGuards) {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && from.matched.indexOf(record) < 0) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            const toLocation = resolve(to);\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // do not restore history on unknown direction\r\n                    if (info.delta)\r\n                        routerHistory.go(-info.delta, false);\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection\r\n                    ).catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure && info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     * @param error - error to throw\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error) {\r\n        markAsReady(error);\r\n        errorHandlers.list().forEach(handler => handler(error));\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(triggerError);\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-ignore: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp.call(this, arguments);\r\n            };\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.indexOf(recordFrom) < 0)\r\n                leavingRecords.push(recordFrom);\r\n            else\r\n                updatingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (from.matched.indexOf(recordTo) < 0)\r\n                enteringRecords.push(recordTo);\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, stringifyQuery, useLink, useRoute, useRouter };\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar has = require('../internals/has');\nvar setGlobal = require('../internals/set-global');\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split('String');\n\n(module.exports = function (O, key, value, options) {\n  var unsafe = options ? !!options.unsafe : false;\n  var simple = options ? !!options.enumerable : false;\n  var noTargetGet = options ? !!options.noTargetGet : false;\n  if (typeof value == 'function') {\n    if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);\n    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');\n  }\n  if (O === global) {\n    if (simple) O[key] = value;\n    else setGlobal(key, value);\n    return;\n  } else if (!unsafe) {\n    delete O[key];\n  } else if (!noTargetGet && O[key]) {\n    simple = true;\n  }\n  if (simple) O[key] = value;\n  else createNonEnumerableProperty(O, key, value);\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, 'toString', function toString() {\n  return typeof this == 'function' && getInternalState(this).source || inspectSource(this);\n});\n","exports.f = Object.getOwnPropertySymbols;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return options.scheduler ? undefined : fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = {};\r\n['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        const arr = toRaw(this);\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            track(arr, \"get\" /* GET */, i + '');\r\n        }\r\n        // we run the method using the original args first (which may be reactive)\r\n        const res = method.apply(arr, args);\r\n        if (res === -1 || res === false) {\r\n            // if that didn't work, run it again using raw values.\r\n            return method.apply(arr, args.map(toRaw));\r\n        }\r\n        else {\r\n            return res;\r\n        }\r\n    };\r\n});\r\n['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n    const method = Array.prototype[key];\r\n    arrayInstrumentations[key] = function (...args) {\r\n        pauseTracking();\r\n        const res = method.apply(this, args);\r\n        resetTracking();\r\n        return res;\r\n    };\r\n});\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver === (isReadonly ? readonlyMap : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key)\r\n            ? builtInSymbols.has(key)\r\n            : key === `__proto__` || key === `__v_isRef`) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        const oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    const result = target.add(value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return result;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    const result = target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isReadonly ? toReadonly : isShallow ? toShallow : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nconst mutableInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, false)\r\n};\r\nconst shallowInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, false, true);\r\n    },\r\n    get size() {\r\n        return size(this);\r\n    },\r\n    has: has$1,\r\n    add,\r\n    set: set$1,\r\n    delete: deleteEntry,\r\n    clear,\r\n    forEach: createForEach(false, true)\r\n};\r\nconst readonlyInstrumentations = {\r\n    get(key) {\r\n        return get$1(this, key, true);\r\n    },\r\n    get size() {\r\n        return size(this, true);\r\n    },\r\n    has(key) {\r\n        return has$1.call(this, key, true);\r\n    },\r\n    add: createReadonlyMethod(\"add\" /* ADD */),\r\n    set: createReadonlyMethod(\"set\" /* SET */),\r\n    delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n    clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n    forEach: createForEach(true, false)\r\n};\r\nconst iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\niteratorMethods.forEach(method => {\r\n    mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n    readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n    shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n});\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: createInstrumentationGetter(true, false)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are reactive, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers);\r\n}\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers);\r\n}\r\n// Return a reactive-copy of the original object, where only the root level\r\n// properties are readonly, and does NOT unwrap refs nor recursively convert\r\n// returned properties.\r\n// This is used for creating the props proxy object for stateful components.\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, readonlyCollectionHandlers);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow = false) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        if (this._dirty) {\r\n            this._value = this.effect();\r\n            this._dirty = false;\r\n        }\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, shallowReactive, trigger, isReactive, effect, stop, isProxy, reactive, shallowReadonly, track, proxyRefs, computed as computed$1, ref, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction, isPromise, isArray, extend, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, hasOwn, isModelListener, def, isReservedProp, EMPTY_ARR, isObject, capitalize, toRawType, makeMap, remove, NOOP, hasChanged, isSet, isMap, invokeArrayFns, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        queue.push(job);\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > -1) {\r\n        queue[i] = null;\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex]);\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex]);\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    // Jobs can never be null before flush starts, since they are only invalidated\r\n    // during execution of another flushed job.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkRecursiveUpdates(seen, job);\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length || pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            throw new Error(`Maximum recursive updates exceeded. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production') && (true )) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id);\r\n        record = map.get(id);\r\n    }\r\n    record.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).delete(instance);\r\n}\r\nfunction createRecord(id) {\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, new Set());\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record).forEach(instance => {\r\n        const comp = instance.type;\r\n        if (!hmrDirtyComponents.has(comp)) {\r\n            // 1. Update existing comp definition to match new one\r\n            newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n            extend(comp, newComp);\r\n            for (const key in comp) {\r\n                if (!(key in newComp)) {\r\n                    delete comp[key];\r\n                }\r\n            }\r\n            // 2. Mark component dirty. This forces the renderer to replace the component\r\n            // on patch.\r\n            hmrDirtyComponents.add(comp);\r\n            // 3. Make sure to unmark the component after the reload.\r\n            queuePostFlushCb(() => {\r\n                hmrDirtyComponents.delete(comp);\r\n            });\r\n        }\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions)) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    // convert handler name to camelCase. See issue #2249\r\n    let handlerName = toHandlerKey(camelize(event));\r\n    let handler = props[handlerName];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handlerName = toHandlerKey(hyphenate(event));\r\n        handler = props[handlerName];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            (instance.emitted = {})[handlerName] = true;\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__emits !== undefined) {\r\n        return comp.__emits;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendEmits = (raw) => {\r\n            hasExtends = true;\r\n            extend(normalized, normalizeEmitsOptions(raw, appContext, true));\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__emits = null);\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    return (comp.__emits = normalized);\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.replace(/Once$/, '');\r\n    return (hasOwn(options, key[2].toLowerCase() + key.slice(3)) ||\r\n        hasOwn(options, key.slice(2)));\r\n}\n\n// mark the current rendering instance for asset resolution (e.g.\r\n// resolveComponent, resolveDirective) during render\r\nlet currentRenderingInstance = null;\r\nfunction setCurrentRenderingInstance(instance) {\r\n    currentRenderingInstance = instance;\r\n}\r\n// dev only flag to track whether $attrs was used during render.\r\n// If $attrs was used during render then the warning for failed attrs\r\n// fallthrough can be suppressed.\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx } = instance;\r\n    let result;\r\n    currentRenderingInstance = instance;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (Component.inheritAttrs !== false && fallthroughAttrs) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment);\r\n    }\r\n    currentRenderingInstance = null;\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    if (vnode.type !== Fragment) {\r\n        return [vnode, undefined];\r\n    }\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\n/**\r\n * dev only\r\n */\r\nfunction filterSingleRoot(children) {\r\n    const filtered = children.filter(child => {\r\n        return !(isVNode(child) &&\r\n            child.type === Comment &&\r\n            child.children !== 'v-if');\r\n    });\r\n    return filtered.length === 1 && isVNode(filtered[0]) ? filtered[0] : null;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag > 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = ( SuspenseImpl\r\n    );\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            const onPending = n2.props && n2.props.onPending;\r\n            if (isFunction(onPending)) {\r\n                onPending();\r\n            }\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            const onResolve = vnode.props && vnode.props.onResolve;\r\n            if (isFunction(onResolve)) {\r\n                onResolve();\r\n            }\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            const onFallback = vnode.props && vnode.props.onFallback;\r\n            if (isFunction(onFallback)) {\r\n                onFallback();\r\n            }\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            suspense.isInFallback = true;\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            suspense.deps++;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                suspense.deps--;\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                if (suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    let content;\r\n    let fallback;\r\n    if (shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        content = normalizeSuspenseSlot(children.default);\r\n        fallback = normalizeSuspenseSlot(children.fallback);\r\n    }\r\n    else {\r\n        content = normalizeSuspenseSlot(children);\r\n        fallback = normalizeVNode(null);\r\n    }\r\n    return {\r\n        content,\r\n        fallback\r\n    };\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    if (isFunction(s)) {\r\n        s = s();\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    return normalizeVNode(s);\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nlet isRenderingCompiledSlot = 0;\r\nconst setCompiledSlotRendering = (n) => (isRenderingCompiledSlot += n);\r\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    isRenderingCompiledSlot++;\r\n    const rendered = (openBlock(),\r\n        createBlock(Fragment, { key: props.key }, slot ? slot(props) : fallback ? fallback() : [], slots._ === 1 /* STABLE */\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : -2 /* BAIL */));\r\n    isRenderingCompiledSlot--;\r\n    return rendered;\r\n}\n\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance) {\r\n    if (!ctx)\r\n        return fn;\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we need to push a null block to\r\n        // avoid that. This isn't necessary if rendering a compiled `<slot>`.\r\n        if (!isRenderingCompiledSlot) {\r\n            openBlock(true /* null block that disables tracking */);\r\n        }\r\n        const owner = currentRenderingInstance;\r\n        setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(owner);\r\n        if (!isRenderingCompiledSlot) {\r\n            closeBlock();\r\n        }\r\n        return res;\r\n    };\r\n    renderFnWithContext._c = true;\r\n    return renderFnWithContext;\r\n}\n\n// SFC scoped style ID management.\r\nlet currentScopeId = null;\r\nconst scopeIdStack = [];\r\n/**\r\n * @private\r\n */\r\nfunction pushScopeId(id) {\r\n    scopeIdStack.push((currentScopeId = id));\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    scopeIdStack.pop();\r\n    currentScopeId = scopeIdStack[scopeIdStack.length - 1] || null;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction withScopeId(id) {\r\n    return ((fn) => withCtx(function () {\r\n        pushScopeId(id);\r\n        const res = fn.apply(this, arguments);\r\n        popScopeId();\r\n        return res;\r\n    }));\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                const key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        attrs[key] = value;\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    attrs[key] = value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        setFullProps(instance, rawProps, props, attrs);\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawProps || EMPTY_OBJ, key, undefined, instance);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    trigger(instance, \"set\" /* SET */, '$attrs');\r\n    if ((process.env.NODE_ENV !== 'production') && rawProps) {\r\n        validateProps(props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    if (rawProps) {\r\n        for (const key in rawProps) {\r\n            const value = rawProps[key];\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                props[camelKey] = value;\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                // Any non-declared (either as a prop or an emitted event) props are put\r\n                // into a separate `attrs` object for spreading. Make sure to preserve\r\n                // original key casing\r\n                attrs[key] = value;\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, rawCurrentProps[key], instance);\r\n        }\r\n    }\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction(defaultValue)) {\r\n                setCurrentInstance(instance);\r\n                value = defaultValue(props);\r\n                setCurrentInstance(null);\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (!hasOwn(props, key) && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    if (!appContext.deopt && comp.__props) {\r\n        return comp.__props;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        return (comp.__props = EMPTY_ARR);\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (comp.__props = [normalized, needCastKeys]);\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        for (let i = 0, len = expectedTypes.length; i < len; i++) {\r\n            if (isSameType(expectedTypes[i], type)) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(props, instance) {\r\n    const rawValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, rawValues[key], opt, !hasOwn(rawValues, key));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            ( ` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR\r\n!isInSSRComponentSetup && injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nconst onErrorCaptured = (hook, target = currentInstance) => {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n};\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    const onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isArray(source) ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep || forceTrigger || hasChanged(newValue, oldValue)) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job;\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, cb, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? () => publicThis[source]\r\n        : source.bind(publicThis);\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject(value) || seen.has(value)) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out') {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-top\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    inheritRef: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        const instance = getCurrentInstance();\r\n        const parentSuspense = instance.suspense;\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post' });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            const name = getName(comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction getName(comp) {\r\n    return comp.displayName || comp.name;\r\n}\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => withCtx((props) => {\r\n    if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n        warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n            `this will not track dependencies used in the slot. ` +\r\n            `Invoke the slot function inside the render function instead.`);\r\n    }\r\n    return normalizeSlotValue(rawSlot(props));\r\n}, ctx);\r\nconst normalizeObjectSlots = (rawSlots, slots) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') && !isKeepAlive(instance.vnode)) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            instance.slots = children;\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        const hook = binding.dir[name];\r\n        if (hook) {\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            isCustomElement: NO,\r\n            errorHandler: undefined,\r\n            warnHandler: undefined\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null)\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                        // global mixin with props/emits de-optimizes props/emits\r\n                        // normalization caching.\r\n                        if (mixin.props || mixin.emits) {\r\n                            context.deopt = true;\r\n                        }\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if ((process.env.NODE_ENV !== 'production') && !container.hasChildNodes()) {\r\n            warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type !== node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    const container = parentNode(node);\r\n                    const hydrateComponent = () => {\r\n                        mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    };\r\n                    // async component\r\n                    const loadAsync = vnode.type.__asyncLoader;\r\n                    if (loadAsync) {\r\n                        loadAsync().then(hydrateComponent);\r\n                    }\r\n                    else {\r\n                        hydrateComponent();\r\n                    }\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // skip props & children if this is hoisted static nodes\r\n        if (patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (!optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if (!isReservedProp(key) && isOn(key)) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, optimized);\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container));\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, optimized) => {\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container));\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect =  queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentComponent, parentSuspense, vnode) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentComponent, parentSuspense, vnode));\r\n        return;\r\n    }\r\n    let value;\r\n    if (!vnode) {\r\n        value = null;\r\n    }\r\n    else {\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            value = vnode.component.proxy;\r\n        }\r\n        else {\r\n            value = vnode.el;\r\n        }\r\n    }\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            refs[ref] = value;\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction(ref)) {\r\n        callWithErrorHandling(ref, parentComponent, 12 /* FUNCTION_REF */, [\r\n            value,\r\n            refs\r\n        ]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentComponent, parentSuspense, n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const moveStaticNode = (vnode, container, anchor) => {\r\n        let cur = vnode.el;\r\n        const end = vnode.anchor;\r\n        while (cur && cur !== end) {\r\n            const next = hostNextSibling(cur);\r\n            hostInsert(cur, container, anchor);\r\n            cur = next;\r\n        }\r\n        hostInsert(end, container, anchor);\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const removeStaticNode = (vnode) => {\r\n        let cur = vnode.el;\r\n        while (cur && cur !== vnode.anchor) {\r\n            const next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(vnode.anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, scopeId, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, scopeId, vnode, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, scopeId, vnode, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (parentComponent) {\r\n            const treeOwnerId = parentComponent.type.__scopeId;\r\n            // vnode's own scopeId and the current patched component's scopeId is\r\n            // different - this is a slot content node.\r\n            if (treeOwnerId && treeOwnerId !== scopeId) {\r\n                hostSetScopeId(el, treeOwnerId + '-s');\r\n            }\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') && subTree.type === Fragment) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                setScopeId(el, parentComponent.vnode.scopeId, parentComponent.vnode, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG);\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                (true ) &&\r\n                parentComponent &&\r\n                parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // - In the case of a Fragment, we need to provide the actual parent\r\n            // of the Fragment itself so it can move its children.\r\n            oldVNode.type === Fragment ||\r\n                // - In the case of different nodes, there is going to be a replacement\r\n                // which also requires the correct parent container\r\n                !isSameVNodeType(oldVNode, newVNode) ||\r\n                // - In the case of a component, it could contain anything.\r\n                oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                oldVNode.shapeFlag & 64 /* TELEPORT */\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren } = n2;\r\n        if (patchFlag > 0) {\r\n            optimized = true;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            startMeasure(instance, `init`);\r\n        }\r\n        setupComponent(instance);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            endMeasure(instance, `init`);\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if ( instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (\r\n                instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `hydrate`);\r\n                    }\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    hydrateNode(initialVNode.el, subTree, instance, parentSuspense);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `hydrate`);\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                    }, parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                const { a } = instance;\r\n                if (a &&\r\n                    initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    queuePostRenderEffect(a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => {\r\n                        invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                    }, parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children);\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if ( shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        // static node move can only happen when force updating HMR\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, null, parentComponent, parentSuspense, null);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if ( shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            // an unmounted teleport should always remove its children if not disabled\r\n            if (shapeFlag & 64 /* TELEPORT */ &&\r\n                (doRemove || !isTeleportDisabled(vnode.props))) {\r\n                vnode.type.remove(vnode, internals);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && (true ) && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (\r\n            parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        const { shapeFlag, children } = n2;\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            if (n2.dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, n2.dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, { r: remove, o: { remove: hostRemove } }) {\r\n        const { shapeFlag, children, anchor } = vnode;\r\n        hostRemove(anchor);\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                remove(children[i]);\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name) {\r\n    return resolveAsset(COMPONENTS, name) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = Component.displayName || Component.name;\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first for components with mixin or extends.\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet shouldTrack = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    shouldTrack += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren = currentBlock || EMPTY_ARR;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (shouldTrack > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isArray(ref)\r\n            ? ref\r\n            : { i: currentRenderingInstance, r: ref }\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        :  isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        staticCount: 0,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if ( shapeFlag & 128 /* SUSPENSE */) {\r\n        const { content, fallback } = normalizeSuspenseChildren(vnode);\r\n        vnode.ssContent = content;\r\n        vnode.ssFallback = fallback;\r\n    }\r\n    if (shouldTrack > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    return {\r\n        __v_isVNode: true,\r\n        [\"__v_skip\" /* SKIP */]: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        children: vnode.children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment, null, text))\r\n        : createVNode(Comment, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, child);\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return child.el === null ? child : cloneVNode(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && setCompiledSlotRendering(1);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && setCompiledSlotRendering(-1);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.vnode.patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n                else {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, toMerge[key])\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction(defaultValue)\r\n                ? defaultValue()\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet isInBeforeCreate = false;\r\nfunction applyOptions(instance, options, deferredData = [], deferredWatch = [], deferredProvide = [], asMixin = false) {\r\n    const { \r\n    // composition\r\n    mixins, extends: extendsOptions, \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // assets\r\n    components, directives, \r\n    // lifecycle\r\n    beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured } = options;\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (asMixin && render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    // applyOptions is called non-as-mixin once per instance\r\n    if (!asMixin) {\r\n        isInBeforeCreate = true;\r\n        callSyncHook('beforeCreate', \"bc\" /* BEFORE_CREATE */, options, instance, globalMixins);\r\n        isInBeforeCreate = false;\r\n        // global mixins are applied first\r\n        applyMixins(instance, globalMixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    // extending a base component...\r\n    if (extendsOptions) {\r\n        applyOptions(instance, extendsOptions, deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n    // local mixins\r\n    if (mixins) {\r\n        applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide);\r\n    }\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        if (isArray(injectOptions)) {\r\n            for (let i = 0; i < injectOptions.length; i++) {\r\n                const key = injectOptions[i];\r\n                ctx[key] = inject(key);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (const key in injectOptions) {\r\n                const opt = injectOptions[key];\r\n                if (isObject(opt)) {\r\n                    ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n                }\r\n                else {\r\n                    ctx[key] = inject(opt);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction(methodHandler)) {\r\n                ctx[key] = methodHandler.bind(publicThis);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (!asMixin) {\r\n        if (deferredData.length) {\r\n            deferredData.forEach(dataFn => resolveData(instance, dataFn, publicThis));\r\n        }\r\n        if (dataOptions) {\r\n            resolveData(instance, dataOptions, publicThis);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const rawData = toRaw(instance.data);\r\n            for (const key in rawData) {\r\n                checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                // expose data on ctx during dev\r\n                if (key[0] !== '$' && key[0] !== '_') {\r\n                    Object.defineProperty(ctx, key, {\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        get: () => rawData[key],\r\n                        set: NOOP\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (dataOptions) {\r\n        deferredData.push(dataOptions);\r\n    }\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction(opt) && isFunction(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        deferredWatch.push(watchOptions);\r\n    }\r\n    if (!asMixin && deferredWatch.length) {\r\n        deferredWatch.forEach(watchOptions => {\r\n            for (const key in watchOptions) {\r\n                createWatcher(watchOptions[key], ctx, publicThis, key);\r\n            }\r\n        });\r\n    }\r\n    if (provideOptions) {\r\n        deferredProvide.push(provideOptions);\r\n    }\r\n    if (!asMixin && deferredProvide.length) {\r\n        deferredProvide.forEach(provideOptions => {\r\n            const provides = isFunction(provideOptions)\r\n                ? provideOptions.call(publicThis)\r\n                : provideOptions;\r\n            for (const key in provides) {\r\n                provide(key, provides[key]);\r\n            }\r\n        });\r\n    }\r\n    // asset options.\r\n    // To reduce memory usage, only components with mixins or extends will have\r\n    // resolved asset registry attached to instance.\r\n    if (asMixin) {\r\n        if (components) {\r\n            extend(instance.components ||\r\n                (instance.components = extend({}, instance.type.components)), components);\r\n        }\r\n        if (directives) {\r\n            extend(instance.directives ||\r\n                (instance.directives = extend({}, instance.type.directives)), directives);\r\n        }\r\n    }\r\n    // lifecycle options\r\n    if (!asMixin) {\r\n        callSyncHook('created', \"c\" /* CREATED */, options, instance, globalMixins);\r\n    }\r\n    if (beforeMount) {\r\n        onBeforeMount(beforeMount.bind(publicThis));\r\n    }\r\n    if (mounted) {\r\n        onMounted(mounted.bind(publicThis));\r\n    }\r\n    if (beforeUpdate) {\r\n        onBeforeUpdate(beforeUpdate.bind(publicThis));\r\n    }\r\n    if (updated) {\r\n        onUpdated(updated.bind(publicThis));\r\n    }\r\n    if (activated) {\r\n        onActivated(activated.bind(publicThis));\r\n    }\r\n    if (deactivated) {\r\n        onDeactivated(deactivated.bind(publicThis));\r\n    }\r\n    if (errorCaptured) {\r\n        onErrorCaptured(errorCaptured.bind(publicThis));\r\n    }\r\n    if (renderTracked) {\r\n        onRenderTracked(renderTracked.bind(publicThis));\r\n    }\r\n    if (renderTriggered) {\r\n        onRenderTriggered(renderTriggered.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && beforeDestroy) {\r\n        warn(`\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`);\r\n    }\r\n    if (beforeUnmount) {\r\n        onBeforeUnmount(beforeUnmount.bind(publicThis));\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && destroyed) {\r\n        warn(`\\`destroyed\\` has been renamed to \\`unmounted\\`.`);\r\n    }\r\n    if (unmounted) {\r\n        onUnmounted(unmounted.bind(publicThis));\r\n    }\r\n}\r\nfunction callSyncHook(name, type, options, instance, globalMixins) {\r\n    callHookFromMixins(name, type, globalMixins, instance);\r\n    const { extends: base, mixins } = options;\r\n    if (base) {\r\n        callHookFromExtends(name, type, base, instance);\r\n    }\r\n    if (mixins) {\r\n        callHookFromMixins(name, type, mixins, instance);\r\n    }\r\n    const selfHook = options[name];\r\n    if (selfHook) {\r\n        callWithAsyncErrorHandling(selfHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromExtends(name, type, base, instance) {\r\n    if (base.extends) {\r\n        callHookFromExtends(name, type, base.extends, instance);\r\n    }\r\n    const baseHook = base[name];\r\n    if (baseHook) {\r\n        callWithAsyncErrorHandling(baseHook.bind(instance.proxy), instance, type);\r\n    }\r\n}\r\nfunction callHookFromMixins(name, type, mixins, instance) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        const chainedMixins = mixins[i].mixins;\r\n        if (chainedMixins) {\r\n            callHookFromMixins(name, type, chainedMixins, instance);\r\n        }\r\n        const fn = mixins[i][name];\r\n        if (fn) {\r\n            callWithAsyncErrorHandling(fn.bind(instance.proxy), instance, type);\r\n        }\r\n    }\r\n}\r\nfunction applyMixins(instance, mixins, deferredData, deferredWatch, deferredProvide) {\r\n    for (let i = 0; i < mixins.length; i++) {\r\n        applyOptions(instance, mixins[i], deferredData, deferredWatch, deferredProvide, true);\r\n    }\r\n}\r\nfunction resolveData(instance, dataFn, publicThis) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction(dataFn)) {\r\n        warn(`The data option must be a function. ` +\r\n            `Plain object usage is no longer supported.`);\r\n    }\r\n    const data = dataFn.call(publicThis, publicThis);\r\n    if ((process.env.NODE_ENV !== 'production') && isPromise(data)) {\r\n        warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n            `intend to perform data fetching before component renders, use ` +\r\n            `async setup() + <Suspense>.`);\r\n    }\r\n    if (!isObject(data)) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n    }\r\n    else if (instance.data === EMPTY_OBJ) {\r\n        instance.data = reactive(data);\r\n    }\r\n    else {\r\n        // existing data: this is a mixin or extends.\r\n        extend(instance.data, data);\r\n    }\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction resolveMergedOptions(instance) {\r\n    const raw = instance.type;\r\n    const { __merged, mixins, extends: extendsOptions } = raw;\r\n    if (__merged)\r\n        return __merged;\r\n    const globalMixins = instance.appContext.mixins;\r\n    if (!globalMixins.length && !mixins && !extendsOptions)\r\n        return raw;\r\n    const options = {};\r\n    globalMixins.forEach(m => mergeOptions(options, m, instance));\r\n    mergeOptions(options, raw, instance);\r\n    return (raw.__merged = options);\r\n}\r\nfunction mergeOptions(to, from, instance) {\r\n    const strats = instance.appContext.config.optionMergeStrategies;\r\n    const { mixins, extends: extendsOptions } = from;\r\n    extendsOptions && mergeOptions(to, extendsOptions, instance);\r\n    mixins &&\r\n        mixins.forEach((m) => mergeOptions(to, m, instance));\r\n    for (const key in from) {\r\n        if (strats && hasOwn(strats, key)) {\r\n            to[key] = strats[key](to[key], from[key], instance.proxy, key);\r\n        }\r\n        else {\r\n            to[key] = from[key];\r\n        }\r\n    }\r\n}\n\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => i.parent && i.parent.proxy,\r\n    $root: i => i.root && i.root.proxy,\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // let @vue/reactivity know it should never observe Vue public instances.\r\n        if (key === \"__v_skip\" /* SKIP */) {\r\n            return true;\r\n        }\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || !isInBeforeCreate) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            return globalProperties[key];\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (key in instance.props) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    // expose global properties\r\n    const { globalProperties } = instance.appContext.config;\r\n    Object.keys(globalProperties).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => globalProperties[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (key[0] === '$' || key[0] === '_') {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentAdded(instance);\r\n    }\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children, shapeFlag } = instance.vnode;\r\n    const isStateful = shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = new Proxy(instance.ctx, PublicInstanceProxyHandlers);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise(setupResult)) {\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult.then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction(setupResult)) {\r\n        // setup returned an inline render function\r\n        instance.render = setupResult;\r\n    }\r\n    else if (isObject(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance);\r\n}\r\nlet compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && Component.template && !Component.render) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `compile`);\r\n            }\r\n            Component.render = compile(Component.template, {\r\n                isCustomElement: instance.appContext.config.isCustomElement,\r\n                delimiters: Component.delimiters\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `compile`);\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__) {\r\n        currentInstance = instance;\r\n        applyOptions(instance, Component);\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                ( ` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrHandlers = {\r\n    get: (target, key) => {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            markAttrsAccessed();\r\n        }\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return new Proxy(instance.attrs, attrHandlers);\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit\r\n        };\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect) {\r\n    if (currentInstance) {\r\n        (currentInstance.effects || (currentInstance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = isFunction(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.vue$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction(options) ? { setup: options, name: options.name } : options;\r\n}\n\nfunction defineAsyncComponent(source) {\r\n    if (isFunction(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent: loadingComponent, errorComponent: errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject(comp) && !isFunction(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        __asyncLoader: load,\r\n        name: 'AsyncComponentWrapper',\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if (( suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { props, children } }) {\r\n    return createVNode(comp, props, children);\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSsrContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    if (!(process.env.NODE_ENV !== 'production') || !true) {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.0.2\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = ( null);\n\nexport { BaseTransition, Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isVNode, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useSSRContext, useTransitionState, version, warn, watch, watchEffect, withCtx, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, unref, Fragment, h, BaseTransition, useTransitionState, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nlet tempContainer;\r\nlet tempSVGContainer;\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is) => isSVG\r\n        ? doc.createElementNS(svgNS, tag)\r\n        : doc.createElement(tag, is ? { is } : undefined),\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        return el.cloneNode(true);\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: innerHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG) {\r\n        const temp = isSVG\r\n            ? tempSVGContainer ||\r\n                (tempSVGContainer = doc.createElementNS(svgNS, 'svg'))\r\n            : tempContainer || (tempContainer = doc.createElement('div'));\r\n        temp.innerHTML = content;\r\n        const first = temp.firstChild;\r\n        let node = first;\r\n        let last = node;\r\n        while (node) {\r\n            last = node;\r\n            nodeOps.insert(node, parent, anchor);\r\n            node = temp.firstChild;\r\n        }\r\n        return [first, last];\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            style.cssText = next;\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' && typeof el[key] === 'boolean') {\r\n        // e.g. <select multiple> compiles to { multiple: '' }\r\n        el[key] = true;\r\n    }\r\n    else if (value == null && typeof el[key] === 'string') {\r\n        // e.g. <div :id=\"null\">\r\n        el[key] = '';\r\n        el.removeAttribute(key);\r\n    }\r\n    else {\r\n        // some properties perform value validation and throw\r\n        try {\r\n            el[key] = value;\r\n        }\r\n        catch (e) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                    `value ${value} is invalid.`, e);\r\n            }\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\n// Determine what event timestamp the browser is using. Annoyingly, the\r\n// timestamp can either be hi-res (relative to page load) or low-res\r\n// (relative to UNIX epoch), so in order to compare time we have to use the\r\n// same timestamp type when saving the flush timestamp.\r\nif (typeof document !== 'undefined' &&\r\n    _getNow() > document.createEvent('Event').timeStamp) {\r\n    // if the low-res timestamp which is bigger than the event timestamp\r\n    // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n    // and we need to use the hi-res version for event listeners as well.\r\n    _getNow = () => performance.now();\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [name.slice(2).toLowerCase(), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787 form as an attribute must be a string, while it accepts an Element as\r\n    // a prop\r\n    if (key === 'form' && typeof value === 'string') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\nfunction useCssVars(getter, scoped = false) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const prefix = scoped && instance.type.__scopeId\r\n        ? `${instance.type.__scopeId.replace(/^data-v-/, '')}-`\r\n        : ``;\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy), prefix);\r\n    onMounted(() => watchEffect(setVars));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars, prefix) {\r\n    if ( vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars, prefix);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${prefix}${key}`, unref(vars[key]));\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars, prefix));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\nfunction resolveTransitionProps(rawProps) {\r\n    let { name = 'v', type, css = true, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (!css) {\r\n        return baseProps;\r\n    }\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            hook && hook(el, resolve);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!(hook && hook.length > 1)) {\r\n                    if (enterDuration) {\r\n                        setTimeout(resolve, enterDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            onBeforeEnter && onBeforeEnter(el);\r\n            addTransitionClass(el, enterActiveClass);\r\n            addTransitionClass(el, enterFromClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            onBeforeAppear && onBeforeAppear(el);\r\n            addTransitionClass(el, appearActiveClass);\r\n            addTransitionClass(el, appearFromClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveActiveClass);\r\n            addTransitionClass(el, leaveFromClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!(onLeave && onLeave.length > 1)) {\r\n                    if (leaveDuration) {\r\n                        setTimeout(resolve, leaveDuration);\r\n                    }\r\n                    else {\r\n                        whenTransitionEnds(el, type, resolve);\r\n                    }\r\n                }\r\n            });\r\n            onLeave && onLeave(el, resolve);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            onEnterCancelled && onEnterCancelled(el);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            onAppearCancelled && onAppearCancelled(el);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            onLeaveCancelled && onLeaveCancelled(el);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nfunction whenTransitionEnds(el, expectedType, cb) {\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return cb();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        cb();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el) {\r\n            if (++ended >= propCount) {\r\n                end();\r\n            }\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\n\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            const tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\n// this is put in a dedicated function to avoid the line from being treeshaken\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, binding, vnode) {\r\n        setChecked(el, binding, vnode);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                if (checked) {\r\n                    modelValue.add(elementValue);\r\n                }\r\n                else {\r\n                    modelValue.delete(elementValue);\r\n                }\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { modifiers: { number } }, vnode) {\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple ? selectedVal : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event))\r\n            return;\r\n        const eventKey = hyphenate(event.key);\r\n        if (\r\n        // None of the provided key modifiers match the current event key\r\n        !modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return;\r\n        }\r\n        return fn(event);\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container);\r\n        container.removeAttribute('v-cloak');\r\n        container.setAttribute('data-v-app', '');\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","var global = require('../internals/global');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));\n","var isObject = require('../internals/is-object');\n\nmodule.exports = function (it) {\n  if (!isObject(it)) {\n    throw TypeError(String(it) + ' is not an object');\n  } return it;\n};\n","var fails = require('../internals/fails');\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !fails(function () {\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var store = require('../internals/shared-store');\n\nvar functionToString = Function.toString;\n\n// this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper\nif (typeof store.inspectSource != 'function') {\n  store.inspectSource = function (it) {\n    return functionToString.call(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var id = 0;\nvar postfix = Math.random();\n\nmodule.exports = function (key) {\n  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var fails = require('../internals/fails');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : typeof detection == 'function' ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar anObject = require('../internals/an-object');\nvar toPrimitive = require('../internals/to-primitive');\n\nvar nativeDefineProperty = Object.defineProperty;\n\n// `Object.defineProperty` method\n// https://tc39.github.io/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return nativeDefineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n// Patch flags are optimization hints generated by the compiler.\r\n// when a block with dynamicChildren is encountered during diff, the algorithm\r\n// enters \"optimized mode\". In this mode, we know that the vdom is produced by\r\n// a render function generated by the compiler, so the algorithm only needs to\r\n// handle updates explicitly marked by these patch flags.\r\n// dev only flag -> name mapping\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            res += normalizeClass(value[i]) + ' ';\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.github.io/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar IS_PURE = require('../internals/is-pure');\nvar NativePromise = require('../internals/native-promise-constructor');\nvar fails = require('../internals/fails');\nvar getBuiltIn = require('../internals/get-built-in');\nvar speciesConstructor = require('../internals/species-constructor');\nvar promiseResolve = require('../internals/promise-resolve');\nvar redefine = require('../internals/redefine');\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromise && fails(function () {\n  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.github.io/ecma262/#sec-promise.prototype.finally\n$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn('Promise'));\n    var isFunction = typeof onFinally == 'function';\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\n// patch native Promise.prototype for native async functions\nif (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {\n  redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);\n}\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar has = require('../internals/has');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!has(WellKnownSymbolsStore, name)) {\n    if (NATIVE_SYMBOL && has(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name];\n    else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","var isObject = require('../internals/is-object');\n\n// `ToPrimitive` abstract operation\n// https://tc39.github.io/ecma262/#sec-toprimitive\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (input, PREFERRED_STRING) {\n  if (!isObject(input)) return input;\n  var fn, val;\n  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;\n  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","var global = require('../internals/global');\nvar setGlobal = require('../internals/set-global');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || setGlobal(SHARED, {});\n\nmodule.exports = store;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var has = require('../internals/has');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~indexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar newPromiseCapability = require('../internals/new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var global = require('../internals/global');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (key, value) {\n  try {\n    createNonEnumerableProperty(global, key, value);\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","module.exports = {};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var path = require('../internals/path');\nvar global = require('../internals/global');\n\nvar aFunction = function (variable) {\n  return typeof variable == 'function' ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar nativePropertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : nativePropertyIsEnumerable;\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line no-undef\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func\n  Function('return this')();\n","var has = require('../internals/has');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n};\n","'use strict';\nvar aFunction = require('../internals/a-function');\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n};\n\n// 25.4.1.5 NewPromiseCapability(C)\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  // eslint-disable-next-line no-undef\n  && !Symbol.sham\n  // eslint-disable-next-line no-undef\n  && typeof Symbol.iterator == 'symbol';\n","var global = require('../internals/global');\n\nmodule.exports = global.Promise;\n"],"sourceRoot":""}